#!/usr/bin/env bash

declare PLUGIN_PATH="$PLUGIN_AVAILABLE_PATH/github-hook"
declare retrieveHookId=""
declare retrieveRepoOwner=""
declare retrieveRepoName=""

storeHook() {
	declare hook=$1
	declare hookId=$2
	declare repoOwner=$3
	declare repoName=$4
	echo "$hook $hookId $repoOwner $repoName" >> "$PLUGIN_PATH/data/hooks"
}

hookExist() {
	declare hook=$1

	# Checks to see if hook is already in local data file
	while read hookLine; do

		# Turn each line into array because the format 
		# is in "$hook $hookId $repoOwner $repoName"
		declare hookArr=($hookLine)
		[[ $hook == ${hookArr[0]} ]] && return 0
	done < "$PLUGIN_PATH/data/hooks"
	return 1
}

getHookId() {
	# Similar logic to "canAddHook", assigns a hook id when found
	declare hook=$1
	while read hookLine; do
		declare hookArr=($hookLine)
		if [[ $hook == ${hookArr[0]} ]] 
		then
			retrieveHookId=${hookArr[1]}
			retrieveRepoOwner=${hookArr[2]}
			retrieveRepoName=${hookArr[3]}
			return 0
		fi
	done < "$PLUGIN_PATH/data/hooks"
	return 1
}

deleteHook() {
	declare hook=$1
	sed -i "/$hook /d" "$PLUGIN_PATH/data/hooks"
}