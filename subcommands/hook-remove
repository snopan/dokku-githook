#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

declare PLUGIN_PATH="$PLUGIN_AVAILABLE_PATH/github-hook"
source "$PLUGIN_PATH/utils"

declare hookId=""

removeHook() {
	declare desc="Removes an existing hook from local data and github"
	declare cmd="github-hook:hook-remove"

	# Moves the input down by one so $1 will be the parameters after $cmd
	[[ $1 == $cmd ]] && shift 1

	# The command format is $cmd $hook
	declare hook=$1

	# Make hook and link data operations available
	source "$PLUGIN_PATH/data-operations/hooks"
	source "$PLUGIN_PATH/data-operations/links"

	# Checks if hook exist, if so then assign the hookId to
	# $retrieveHookId, repoOwner to $retrieveRepoOwner and repoName
	# to $retrieveRepoName, this is defined in the hook data operation
	if getHookId $hook
	then
		removeGithubHook $retrieveHookId $retrieveRepoOwner $retrieveRepoName
		
		# Remove the hook from local data and 
		# any links using the given hook
		deleteHook $hook
		deleteLinkByHook $hook
		echo "Successfully removed hook \"$hook\"!"
		reload
	else
		echo "err: given hook \"$hook\" does not exist"
		exit 1
	fi
}

checkGithubAuth
removeHook "$@"
