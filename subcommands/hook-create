#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

declare PLUGIN_PATH="$PLUGIN_AVAILABLE_PATH/github-hook"
source "$PLUGIN_PATH/utils"

declare hookId=""

createHook() {
	declare desc="Creates a new hook and adds it to http server and github"
	declare cmd="github-hook:hook-create"

	# Moves the input down by one so $1 will be the parameters after $cmd
	[[ $1 == $cmd ]] && shift 1

	# The command format is $cmd $hook $repoOwner $repoName
	declare hook=$1
	declare repoOwner=$2
	declare repoName=$3

	# Make hook data operations available
	source "$PLUGIN_PATH/data-operations/hooks"

	# Check if the hook exist in local data
	if ! hookExist $hook
	then

		# Create the new hook with github
		if createGithubHook $hook $repoOwner $repoName
		then

			# Once successful, add it to local data
			storeHook $hook $hookId $repoOwner $repoName
			echo "=> Successfully added \"$hook\" as a hook"
		fi
	else
		echo "err: given hook \"$hook\" already exist"
		exit 1
	fi
}

createGithubHook() {
	declare hook=$1
	declare repoOwner=$2
	declare repoName=$3
	declare ip=$(curl "ifconfig.me")

	# Makes a request to github for creating hook
	# Running this assumes GITHUB_USERNAME and GITHUB_TOKEN
	# is available in the environment variables
	declare response=$(curl \
	-sS \
	-u "$GITHUB_USERNAME:$GITHUB_TOKEN" \
	-H "Accept: application/vnd.github.v3+json" \
	"https://api.github.com/repos/$repoOwner/$repoName/hooks" \
	-d '{"name": "web","config": {"url": "http://'$ip':'$GITHUB_HOOK_PORT'/'$hook'", "insecure_ssl": "1"}}')

	# If request was successful, there will be a hook id returned
	if $(echo $response | jq 'has("id")')
	then
		hookId=$(echo $response | jq '.id')
		echo "=> Added hook \"$hook\" to github!"
		return 0
	else

		# When request fails, there is always a message field
		echo "err: failed to add hook \"$hook\" to github: $(echo $response | jq '.message')" 

		# Sometimes there would be errors field aswell for certain
		# errors so we should log that aswell
		if $(echo $response | jq 'has("errors")')
		then 
			echo "err: failed to add hook \"$hook\" to github:  $(echo $response | jq '.errors[0].message')"
		fi
		return 1
	fi
}

checkGithubAuth
createHook "$@"